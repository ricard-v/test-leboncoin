apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion buildVersions.compileSdkVersion
    buildToolsVersion buildVersions.buildToolsVersion

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        applicationId "com.mackosoft.lebonalbum"

        minSdkVersion buildVersions.minSdkVersion
        targetSdkVersion buildVersions.targetSdkVersion

        versionCode modulesVersions.appVersionCode
        versionName modulesVersions.appVersionName

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // required to use methods such as `by ActivityViewModels()`
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    // Internal Modules
    implementation project(':commons')
    implementation project(':services')

    // AndroidX
    implementation "androidx.activity:activity-ktx:$activity_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "androidx.transition:transition:$transition_version"
    implementation "androidx.vectordrawable:vectordrawable:$vectordrawable_version"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "com.android.databinding:compiler:$databinding_compiler_version"

    // Dagger
    implementation  "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Retrofit (required to work with dagger as the logic is in the `services` module
    implementation ("com.squareup.retrofit2:retrofit:$retrofit_version") {
        exclude group: "com.squareup.okhttp3"
    }

    // Room (see issue https://stackoverflow.com/questions/53152796/androidx-room-unresolved-supertypes-roomdatabase)
    implementation "androidx.room:room-runtime:$room_version"

    // Image Loaders
    implementation ("com.github.bumptech.glide:glide:$glide_version") {
        exclude group: "com.squareup.okhttp3"
    }
    implementation ("com.squareup.picasso:picasso:$picasso_version") {
        exclude group: "com.squareup.okhttp3"
    }

    // Unit testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_test_espresso_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
